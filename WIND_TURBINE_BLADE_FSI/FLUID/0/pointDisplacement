/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       pointVectorField;
    object      pointDisplacement;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    front
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    hub_to_blade
    {
        type            surfaceDisplacementFSI;
        value           uniform (0 0 0);
    }
    blade
    {
        type            surfaceDisplacementFSI;
        value           uniform (0 0 0);
    }
    hub
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    blade_others
    {
        type            surfaceDisplacementFSI;
        value           uniform (0 0 0);
    }
    bottom
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    back
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }

    AMI1
    {
        type            cyclicAMI;
        transform       rotational;
        rotationAxis    (0 1 0);
        rotationCentre  (0 -1 0);
        rotationAngle   120;
        value           uniform (0 0 0);
    }

    AMI2
    {
        type            cyclicAMI;
        transform       rotational;
        rotationAxis    (0 1 0);
        rotationCentre  (0 -1 0);
        rotationAngle   120;
        value           uniform (0 0 0);
    }

    end
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
}

// ************************************************************************* //
